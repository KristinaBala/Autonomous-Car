{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 HelveticaNeue-Italic;\f2\fswiss\fcharset0 ArialMT;
\f3\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;\red13\green0\blue57;
\red32\green0\blue57;\red47\green0\blue57;\red39\green0\blue57;\red15\green0\blue57;\red48\green0\blue57;
\red15\green4\blue42;\red54\green0\blue57;\red15\green43\blue18;\red17\green0\blue13;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;\cssrgb\c5882\c784\c28627;
\cssrgb\c17255\c0\c28627;\cssrgb\c24314\c392\c28627;\cssrgb\c20784\c0\c28627;\cssrgb\c7451\c0\c29020;\cssrgb\c25098\c0\c28627;
\cssrgb\c7059\c3137\c21961;\cssrgb\c27843\c0\c28627;\cssrgb\c6275\c21569\c9020;\cssrgb\c8235\c0\c5882;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh15260\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1\i\fs60 \cf2 \cb3 \expnd0\expndtw0\kerning0
Autonomous Car Running Version 2.0\'a0
\f2\i0\fs26 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs60 \cf2 \cb3 \'a0\
 1. UltraSonic Sensor\'a0
\f2\fs26 \cb1 \

\f3\fs60 \cb3 \'a02. LineTracking Sensor
\f2\fs26 \cb1 \

\f3\fs60 \cb3 \'a03. Manual-Automatic mode shift button
\f2\fs26 \cb1 \

\f3\fs60 \cb3 \'a04. Connection to the Raspberry Pi
\f2\fs26 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs60 \cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\fs48 \cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
UltraSonic ==> LineTracking\'a0
\f2\fs26 \cb1 \
\ls1\ilvl0
\f3\fs48 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
LineTracking ==> Complete Running
\f2\fs26 \cb1 \
\ls1\ilvl0
\f3\fs48 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Button pressed ==> Switch mode
\f2\fs26 \cb1 \
\ls1\ilvl0
\f3\fs48 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Wait on input from Raspberry Pi ==> User able to control from GUI (to be finished in version 3.0)
\f2\fs26 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf2 \cb3           \
               \'93\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94
\f2\fs26 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 <<Pseudo Code>>
\f2\fs26 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 int checkUltraSonic();
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf5 \cb3 if gonna hit -> return 0\'a0
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf6 \cb3 else \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 -> return 1
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 int checkLineTracking();
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf7 \cb3 if it get off track\'a0 \'a0-> return 0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf7 \cb3 else \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0  -> return 1\'a0
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf7 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 if Button is pressed
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf9 \cb3 Enter interrupt Mode\'a0
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf9 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 Establish Connection with the Raspberry Pi\cf8 \'a0
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf11 \cb3 Use UART protocol
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf7 \cb3                \
              \'93\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'a0
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf7 \
\pard\pardeftab720\partightenfactor0
\cf12 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 <<Source Code>>
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf4 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 volatile int carMode ;\'a0 \'a0 \'a0 // Volatile in order to make sure data are stored properly during Interrupt\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int raspberry_pi_input ;
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 int button \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 = 2 \'a0 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int motorR1\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0  = A0 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int motorR2\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0  = A1 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int motorL1 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 = A2 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int motorL2\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0  =\'a0A3 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int LTsensorR\'a0 \'a0 \'a0 \'a0 \'a0 \'a0=\'a0 3\'a0 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int LTsensorL\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 =\'a0 4  ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int USsensorR_trig \'a0 \'a0=\'a0 5\'a0 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int USsensorR_echo\'a0 = 6 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int USsensorL_trig\'a0 \'a0  = 7 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int USsensorL_echo  =\'a0 8 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int USsensorM_trig \'a0 \'a0= 9 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int USsensorM_echo\'a0= 10 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int LTsensorR_value \'a0 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int LTsensorL_value\'a0 \'a0;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int USsensorR_value\'a0 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int USsensorL_value \'a0 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 int USsensorM_value\'a0 ;
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0          */ \'93\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94 */
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 int enterManualMode ();\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // To be implemented in version 3.0\
\
int checkUltraSonic()
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorR_trig, HIGH);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 delayMicroseconds(2) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorR_trig, LOW);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // Evaluting the Right u.s. sensor
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorR_trig, HIGH);\'a0 \'a0 \'a0 \'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 delayMicroseconds(10) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorR_trig, LOW);\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 USsensorR_value = pulseIn(USsensorR_echo , HIGH) * 0.034 / 2 ;
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 \'a0\'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorL_trig, HIGH);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 delayMicroseconds(2) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorL_trig, LOW);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // Evaluting the Left u.s. sensor
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorL_trig, HIGH);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 delayMicroseconds(10) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorL_trig, LOW);\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 USsensorL_value = pulseIn(USsensorL_echo , HIGH) * 0.034 / 2 ;
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorM_trig, HIGH);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 delayMicroseconds(2) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorM_trig, LOW);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // Evaluting the Middle u.s. sensor
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorM_trig, HIGH);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 delayMicroseconds(10) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 digitalWrite(USsensorM_trig, LOW);\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 USsensorM_value = pulseIn(USsensorM_echo , HIGH) * 0.034 / 2 ;
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 \'a0 if (USsensorR_value >15 && USsensorL_value >15\'a0 && USsensorM_value >35 )\'a0 \{return 1 ;\}
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 else\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 														                       \{return 0 ;\}
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 int checkLineTracking()
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0LTsensorR_value = digitalRead(3);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0LTsensorL_value = digitalRead(4);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0if (LTsensorR_value\'a0 && LTsensorL_value == 1) \{ return 1 ;\}
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0else \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\{ return 0 ;\}\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 void moveForward ()
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorR1\'a0 , HIGH) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorR2\'a0 ,LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorL1\'a0 , HIGH) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorL2\'a0 , LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 void turnRight ()
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorR1\'a0 , LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorR2\'a0 ,LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorL1\'a0 , HIGH) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorL2\'a0 , LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 void turnLeft ()
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0digitalWrite(motorR1\'a0 , HIGH) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorR2\'a0 ,LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorL1\'a0 , LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorL2\'a0 , LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 void stop()
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorR1\'a0 , LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorR2\'a0 , LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorL1\'a0 , LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorL2\'a0 , LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 void moveBack()
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorR1\'a0 , LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorR2\'a0 ,HIGH) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorL1\'a0 , LOW) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 digitalWrite(motorL2\'a0 , HIGH) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 void escapeAlgorithm1 () \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // Avoids near objects in the front
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 stop() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 do \{ moveBack() ;\}\'a0 \cb1 \uc0\u8232 \cb3 \'a0 \'a0 while (! checkUltraSonic() ) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 turnLeft() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 delay (200) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 delay(1500) ; \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 turnRight() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 delay(200) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 delay (2700) ;\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 turnRight() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 delay(200) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 delay(1500) ; \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 turnLeft() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 delay (200) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 void escapeAlgorithm2 () \'a0 \'a0 \'a0 \'a0 \'a0// Avoids far objects in the front
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 do \{ turnRight() ;\}\'a0 \cb1 \uc0\u8232 \cb3 \'a0 while (! checkUltraSonic() ) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(1500) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 turnLeft() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(200) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay (3500);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 turnLeft() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(200) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(1500) ; \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 turnRight()\'a0 ; \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(200) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 moveForward() ;\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 void escapeAlgorithm3 ()\'a0 \'a0 \'a0 \'a0 \'a0 // Avoids objects on the right
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 do \{ turnLeft() ;\}\'a0 \cb1 \uc0\u8232 \cb3 \'a0 while (! checkUltraSonic() ) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 turnRight() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(100) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(1200);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 turnRight() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(100) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(1200);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 turnLeft() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(100) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 void escapeAlgorithm4 ()\'a0 \'a0 \'a0 \'a0 \'a0 // Avoids objects on the left
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 do \{ turnRight() ;\}\'a0 \cb1 \uc0\u8232 \cb3 \'a0 while (! checkUltraSonic() ) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 turnLeft() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(100) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(1200);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 turnLeft() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(100) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(1200);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 turnRight() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 delay(100) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 moveForward() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 void switchCarMode () \'a0 \'a0 \'a0 \'a0 //\'a0 ISR function
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 stop() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 carMode ++ ;\'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 */ \'93\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94 */
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 void setup()
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 attachInterrupt(digitalPinToInterrupt(2), switchCarMode, CHANGE) ;\'a0 \'a0 // The Interrupt\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 Serial.begin(9600);\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0                                                             // For connection with Raspberry pi \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 pinMode(motorR1\'a0 ,OUTPUT) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 pinMode(motorR2 \'a0 ,OUTPUT) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 pinMode(motorL1 \'a0 \'a0 ,OUTPUT)\'a0 ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 pinMode(motorL2\'a0 ,OUTPUT)\'a0 ;
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 pinMode(LTsensorR\'a0 ,INPUT) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 pinMode(LTsensorL\'a0 ,INPUT) ;
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 pinMode(USsensorR_trig\'a0 ,OUTPUT);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 pinMode(USsensorR_echo\'a0 ,INPUT) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 pinMode(USsensorL_trig\'a0 ,OUTPUT);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 pinMode(USsensorL_echo\'a0 ,INPUT) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 pinMode(USsensorM_trig\'a0 ,OUTPUT);
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 pinMode(USsensorM_echo\'a0 ,INPUT) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0           */ \'93\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94\'94 */
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 void loop()
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 if (carMode %2) \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0enterManualMode ();\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // To be implemented in version 3.0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0  \}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 \'a0 \'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 while(checkUltraSonic()) \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // Automatic Mode
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \{\'a0
\f2\fs26 \cf2 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 move forward() ;
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 checkLineTracking() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 if( LTsensorR_value == 0) \{ \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 do \{ turnRight () ;\}\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 while (! checkLineTracking()) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \}
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \
   else if( LTsensorL_value == 0) \{ \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0  do \{ turnLeft () ;\}\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0  while (! checkLineTracking()) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0     \}
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0  \
   else if( ! checkLineTracking())\'a0 \{ \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0   do \{\
                                                             turnRght () ;  moveForward() ; delay(1000) ; turnLeft() ; moveForward() ; delay(1000) ;\
                                                                \}\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0   while (! checkLineTracking()) ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \}
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0\}
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3     \'a0if ( USsensorM_value \uc0\u8804  20)\'a0 \'a0\{\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 escapeAlgorithm1 () ; \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \} \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 else if ( USsensorM_value \uc0\u8804  35 && USsensorM_value\'a0 > 20)\'a0 \{\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 escapeAlgorithm2 () ; \'a0 \'a0 \'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0  \}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 else\'a0 if ( USsensorR_value \uc0\u8804  20\'a0 )\'a0 \{\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 escapeAlgorithm3 () ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 else\'a0 if ( USsensorL_value \uc0\u8804  20\'a0 )\'a0 \{\'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0escapeAlgorithm4 () ;\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0\}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 \'a0\'a0 if(Serial.available() > 0)\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // Connection with the Raspberry Pi using UART protocol
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0  \{
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0\'a0 \'a0  raspberry_pi_input = Serial.read() ;
\f2\fs26 \cf2 \cb1 \

\f3\fs48 \cf13 \cb3 \'a0 \'a0 \'a0 \'a0\}
\f2\fs26 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs48 \cf13 \
\
\pard\pardeftab720\partightenfactor0
\cf13 \cb3 \}}